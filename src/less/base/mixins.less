// ==========================================================================
// Lipstick â€“ Mixins
// ==========================================================================
// Font sizes (primary sizing in `rem` units with a fallback of `px`)
// Example usage .font-size(18);
.font-size (@size) {
  @remValue: @size / 16;
  @pxValue: (@size);
  font-size: ~"@{pxValue}px"; 
  font-size: ~"@{remValue}rem";
}

// Line height sizes (primary sizing in `rem` units with a fallback of `px`)
// Example usage .line-height(22);
.line-height (@size) {
  @remValue: @size / 16;
  @pxValue: (@size);
  line-height: ~"@{pxValue}px"; 
  line-height: ~"@{remValue}rem";
}

// SVG background with PNG fallback
// Example Usage .svg-bg("img/banner.svg", "img/banner.png", 50%, 50%, no-repeat);
.bg-svg(@svg, @png, @x: 0, @y: 0, @repeat: no-repeat) {
  background: url(@svg) @x @y @repeat;
  .no-svg & {
    background: url(@png) @x @y @repeat;
  }
}

// Background Color with Opacity
// Example Usage: .bg-rgba(#111, 50%);
.bg-rgba(@color,@alpha) {
  @rgba: rgba(red(@color), green(@color), blue(@color), @alpha);
  @argb: argb(@rgba);
  background-color: @color;
  background-color: @rgba;
}

// Animations
// Example Usage .animation(1s);
.animate(@duration: 1s) {
  animation-duration: @duration;
  animation-fill-mode: both;
}

// SVG Fill - http://zslabs.com/articles/svg-background-fill/#update-2
// Example usage: .svg-fill("img/icon.svg", "#555");
.svg-fill(@src, @fill: ~"") when not (@fill = '') {
  @data-uri: data-uri('image/svg+xml;charset=UTF-8', "src/@{src}");
  @replace-src: replace("@{data-uri}", "fill\%3D\%22\%23[\w]{3,6}\%22", escape('fill="@{fill}"'), "g");
  background-image:e(@replace-src);
}
// SVG Fill - http://zslabs.com/articles/svg-background-fill/#update-2
// Example usage: .svg-fill("img/icon.svg");
.svg-fill(@src, @fill: ~"") when (@fill = ~'') {
  @data-uri: data-uri('image/svg+xml;charset=UTF-8', "src/@{src}");
  background-image:e("@{data-uri}");
}

.gradient (@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, @start),
                               color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
                                  @start,
                                  @stop);
  background: -moz-linear-gradient(center bottom,
                                   @start 0%,
                                   @stop 100%);
  background: -o-linear-gradient(@stop,
                                 @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}

.bw-gradient (@color: #F5F5F5, @start: 0, @stop: 255) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, rgb(@start,@start,@start)),
                               color-stop(1, rgb(@stop,@stop,@stop)));
  background: -ms-linear-gradient(bottom,
                                  rgb(@start,@start,@start) 0%,
                                  rgb(@stop,@stop,@stop) 100%);
  background: -moz-linear-gradient(center bottom,
                                   rgb(@start,@start,@start) 0%,
                                   rgb(@stop,@stop,@stop) 100%);
  background: -o-linear-gradient(rgb(@stop,@stop,@stop),
                                 rgb(@start,@start,@start));
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}

.bordered (@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}

.rounded (@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

.border-radius (@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  .background-clip(padding-box);
}

.border-left-radius (@radius) {
  -webkit-border-bottom-left-radius: @radius;
  -webkit-border-top-left-radius: @radius;
  -moz-border-radius-bottomleft: @radius;
  -moz-border-radius-topleft: @radius;
  border-bottom-left-radius: @radius;
  border-top-left-radius: @radius;
  .background-clip(padding-box);
}

.border-right-radius (@radius) {
  -webkit-border-top-right-radius: @radius;
  -webkit-border-bottom-right-radius: @radius;
  -moz-border-radius-topright: @radius;
  -moz-border-radius-bottomright: @radius;
  border-top-right-radius: @radius;
  border-bottom-right-radius: @radius;
  .background-clip(padding-box);
}

.border-top-radius (@radius) {
  -webkit-border-top-left-radius: @radius;
  -webkit-border-top-right-radius: @radius;
  -moz-border-radius-topleft: @radius;
  -moz-border-radius-topright: @radius;
  border-top-left-radius: @radius;
  border-top-right-radius: @radius;
  .background-clip(padding-box);
}

.border-bottom-radius (@radius) {
  -webkit-border-bottom-left-radius: @radius;
  -webkit-border-bottom-right-radius: @radius;
  -moz-border-radius-bottomleft: @radius;
  -moz-border-radius-bottomright: @radius;
  border-bottom-left-radius: @radius;
  border-bottom-right-radius: @radius;
  .background-clip(padding-box);
}

.box-sizing (@sizing:border-box) {
  -ms-box-sizing: @sizing;
  -moz-box-sizing: @sizing;
  -webkit-box-sizing: @sizing;
  box-sizing: @sizing;
}

.box-shadow(@shadow, @color) when (iscolor(@color)) {
  -moz-box-shadow:    @shadow @color;
  -webkit-box-shadow: @shadow @color;
  box-shadow:         @shadow @color;
}

.box-shadow(@style, @alpha: 40%) when (isnumber(@alpha)) {
  .box-shadow(@style, rgba(0, 0, 0, @alpha));
}

.drop-shadow (@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

.inner-shadow (@horizontal: 0, @vertical: 1px, @blur: 2px, @alpha: 0.4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.opacity (@opacity: 0.5) {
  // -moz-opacity: @opacity;
  // -khtml-opacity: @opacity;
  // -webkit-opacity: @opacity;
  opacity: @opacity;
  // @opperc: @opacity * 100;
  // -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  // filter: ~"alpha(opacity=@{opperc})";
}

// .placeholder (@color, @font-style) {
//   &::-webkit-input-placeholder { /* WebKit browsers */
//     color: @color;
//     font-style: @font-style;
//   }
//   &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
//     color: @color;
//     font-style: @font-style;
//   }
//   &::-mozcolorplaceholder { /* Mozilla Firefox 19+ */
//     color: @color;
//     font-style: @font-style;
//   }
//   &:-ms-input-placeholder { /* Internet Explorer 10+ */
//     color: @color;
//     font-style: @font-style;
//   }
// }

.transition-duration (@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration: @duration;
  transition-duration: @duration;
}

.transition-delay (@delay: 0.2s) {
  -moz-transition-delay: @delay;
  -webkit-transition-delay: @delay;
  -o-transition-delay: @delay;
  transition-delay: @delay;
}

.transform (...) {
  -webkit-transform: @arguments;
  -moz-transform: @arguments;
  -o-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}

.rotation (@deg: 5deg){
  .transform(rotate(@deg));
}

.scale (@ratio: 1.5){
  .transform(scale(@ratio));
}

.transition (@type: all, @duration: 0.2s, @ease: ease-out) {
  -webkit-transition: ~"-webkit-@{type}" @duration @ease;
  -moz-transition: ~"-moz-@{type}" @duration @ease;
  -o-transition: ~"-o-@{type}" @duration @ease;
  transition: @type @duration @ease;
}

.translate (@x: 0, @y: 0) {
  .transform(translate(@x, @y));
}

.translate3d (@x: 0, @y: 0, @z: 0) {
  -webkit-transform: translate3d(@x, @y, @z);
  -moz-transform: translate3d(@x, @y, @z);
   -ms-transform: translate(@x, @y); //ie9
   -ms-transform: translate3d(@x, @y, @z); //ie10+
    -o-transform: translate3d(@x, @y, @z);
       transform: translate(@x, @y);
}

.font-face (@fontname, @fontfile) {
  font-family: "@{fontname}";
  src: url("@{fontfile}-webfont.eot");
  src: url("@{fontfile}-webfont.eot?#iefix") format("embedded-opentype"),
       url("@{fontfile}-webfont.woff") format("woff"),
       url("@{fontfile}-webfont.ttf") format("truetype"),
       url("@{fontfile}-webfont.svg#@{fontname}") format("svg");
  font-weight: normal;
  font-style: normal;
}

.background-clip (@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}